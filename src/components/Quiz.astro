---
type Props = {
  title: string;
  number?: string;
  list?: {
    item: string
  }[]
  level?: string;
}

const {title, number, list, level} = Astro.props;
---

<div id={number && `q${number}`}>
  <dt class="border-red-600 border-t-2 border-b bg-orange-50 py-5 md:p-6">
    <div class="font-bold leading-normal text-lg md:text-2xl md:leading-normal flex gap-2.5 md:gap-10 pl-1.5 pr-2 md:p-0">
      <span class="text-[40px] md:text-[56px] font-medium leading-none md:leading-none text-orange-600">
        Q{number && number}
      </span>
      {title}
    </div>
    {list && (
      <ul class="mt-3 md:mt-2 px-3 md:px-0 md:ml-[83px] font-bold">
        {list.map(({item}) => {
          return (
            <li class="list-none">
              {item}
            </li>
          )
        })}
      </ul>
    )}
    {level && (
      <ul class="flex gap-2 text-3.25 leading-normal md:text-sm md:leading-relaxed font-bold ml-[54px] md:ml-[102px] mt-2">
        <li class={`px-1.5 md:px-2 rounded list-none ${level === "both" || level === "low" ? "bg-orange-600 text-white" : "bg-white border-slate-300 border text-slate-300"}`}>
          初等・中等
        </li>
        <li class={`px-1.5 md:px-2 rounded list-none ${level === "both" || level === "high" ? "bg-orange-600 text-white" : "bg-white border-slate-300 border text-slate-300"}`}>
          高等
        </li>
      </ul>
    )}
  </dt>
  <dd class="bg-amber-100">
    <slot />
  </dd>
</div>
