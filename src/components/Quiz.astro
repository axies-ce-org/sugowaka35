---
type Props = {
  title: string;
  number?: string;
  list?: {
    item: string
  }[]
  level?: string;
}

const {title, number, list, level} = Astro.props;
---

<div id={number && `q${number}`} class="quiz">
  <dt class="border-t-2 border-b border-red-600 bg-orange-50 py-5 md:p-6">
    <div class="flex gap-2.5 pl-1.5 pr-2 text-lg font-bold leading-normal md:gap-10 md:p-0 md:text-2xl md:leading-normal">
      <span class="text-[40px] font-medium leading-none text-orange-600 md:text-[56px] md:leading-none">
        Q{number && number}
      </span>
      <div class="flex flex-col gap-2">
        {title}
        {level && (
          <ul class="text-3.25 flex gap-2 !p-0 font-bold leading-normal md:text-sm md:leading-relaxed">
            <li class={`list-none rounded px-1.5 md:px-2 ${level === "both" || level === "low" ? "bg-orange-600 text-white" : "border border-slate-300 bg-white text-slate-300"}`}>
              初等・中等
            </li>
            <li class={`list-none rounded px-1.5 md:px-2 ${level === "both" || level === "high" ? "bg-orange-600 text-white" : "border border-slate-300 bg-white text-slate-300"}`}>
              高等
            </li>
          </ul>
        )}
      </div>
    </div>
    {list && (
      <ul class="mt-3 px-3 font-bold md:mt-2 md:ml-[83px] md:px-0">
        {list.map(({item}) => {
          return (
            <li class="list-none">
              {item}
            </li>
          )
        })}
      </ul>
    )}
  </dt>
  <dd class="bg-amber-100">
    <slot />
  </dd>
</div>
