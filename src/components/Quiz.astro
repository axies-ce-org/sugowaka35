---
type Props = {
  title: string;
  number?: string;
  list?: {
    item: string;
  }[];
  level?: string;
  isEN?: boolean;
};

const { title, number, list, level, isEN } = Astro.props;
---

<dl id={number && `q${number}`} class="quiz">
  <dt class="border-b border-t-2 border-red-600 bg-orange-50 py-5 md:p-6">
    <div class="flex gap-2.5 pl-1.5 pr-2 text-lg/normal font-bold md:gap-10 md:p-0 md:text-2xl/normal">
      <span class="text-[2.5rem]/none font-medium text-orange-600 md:text-[3.5rem]/none">
        Q{number && number}
      </span>
      <div class="flex flex-col gap-2">
        {title}
        {
          level && (
            <ul class="flex gap-2 !p-0 text-3.25/normal font-bold md:text-sm/relaxed">
              <li
                class={`list-none rounded px-1.5 md:px-2 ${
                  level === 'both' || level === 'low'
                    ? 'bg-orange-600 text-white'
                    : 'border border-slate-300 bg-white text-slate-300'
                }`}
              >
                {isEN ? 'Elementary, middle' : '初等・中等'}
              </li>
              <li
                class={`list-none rounded px-1.5 md:px-2 ${
                  level === 'both' || level === 'high'
                    ? 'bg-orange-600 text-white'
                    : 'border border-slate-300 bg-white text-slate-300'
                }`}
              >
                {isEN ? 'High' : '高等'}
              </li>
            </ul>
          )
        }
      </div>
    </div>
    {
      list && (
        <ul class="mt-3 px-3 font-bold md:ml-[5.1875rem] md:mt-2 md:px-0">
          {list.map(({ item }) => {
            return <li class="list-none">{item}</li>;
          })}
        </ul>
      )
    }
  </dt>
  <dd class="bg-amber-100">
    <slot />
  </dd>
</dl>
